<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>angular on 永誌不忘 • 筆記簿</title>
    <link>https://calvinegs.github.io/tags/angular/</link>
    <description>Recent content in angular on 永誌不忘 • 筆記簿</description>
    <image>
      <url>https://calvinegs.github.io/papermod-cover.png</url>
      <link>https://calvinegs.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://calvinegs.github.io/tags/angular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Angular 來建立網路應用程式</title>
      <link>https://calvinegs.github.io/posts/webapp-angular/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/webapp-angular/</guid>
      <description>接下來的三篇筆記分別要紀錄使用不同的三個 framework(Angular、React、Vue)來建立功能一模一樣的網路應用程式， 而在本篇筆記中是使用 Angular(14) 來建立 Web APP</description>
    </item>
    
    <item>
      <title>使用 Angular 14 中內建的 TitleStrategy 功能來自定瀏覽器的頁面標題</title>
      <link>https://calvinegs.github.io/posts/angular-titlestrategy/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/angular-titlestrategy/</guid>
      <description>使用 Angular 建構應用程式時，為了增加使用良好體驗，常會做的一件事情是在每次成功導航後去更新瀏覽器的頁面標題。以往這個動作必須手工自行去撰寫程式，現在在 Angular 14 中已內建這樣功能 - TitleStrategy。在本篇筆記中將紀錄如何使用這個功能並自定客制化瀏覽器的頁面標題</description>
    </item>
    
    <item>
      <title>Angular 14 範例: 透過 Web API 完成 CRUD 的應用程式</title>
      <link>https://calvinegs.github.io/posts/angular-webapi-crud/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/angular-webapi-crud/</guid>
      <description>在這個範例中可以看到使用 Angular Reactive Form 搭配 後端 Web API 來完成 Todo 的新增、修改、刪除、查詢功能</description>
    </item>
    
    <item>
      <title>使用 Angular 14 建立 Reactive Form 表單驗證範例</title>
      <link>https://calvinegs.github.io/posts/angular-auth-jwt/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/angular-auth-jwt/</guid>
      <description>在這個範例中可以看到使用 Angular Reactive Form 搭配 Bootstrip UI Framework 所建立的｀使用者資料註冊｀功能，同時實現一個簡易版的｀自定驗證器｀(custome validator)</description>
    </item>
    
    <item>
      <title>使用 Angular 13 建立 Reactive Form 表單驗證範例</title>
      <link>https://calvinegs.github.io/posts/angular-formvalidate/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/angular-formvalidate/</guid>
      <description>在這個範例中可以看到使用 Angular Reactive Form 搭配 Bootstrip UI Framework 所建立的｀使用者資料註冊｀功能，同時實現一個簡易版的｀自定驗證器｀(custome validator)</description>
    </item>
    
    <item>
      <title>關於 Angular中的 constructor 與 ngOnInit</title>
      <link>https://calvinegs.github.io/posts/angular-ngoninit/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/angular-ngoninit/</guid>
      <description>在本篇筆記中來紀錄一下 Angular中的 constructor 與 ngOnInit 有何不同的使用情境，另也探討 ngOnInit 與 ngOnChanges 有何不同</description>
    </item>
    
    <item>
      <title>使用 nvs 來管理不同版本 Node.js 執行環境</title>
      <link>https://calvinegs.github.io/posts/nvs-using/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/nvs-using/</guid>
      <description>開發環境為了不同的目的可能會同時使用到不同版本的 Node.js，透過 nvs 工具可以有效、快速切換各個版本的 Node.js 開發環境</description>
    </item>
    
    <item>
      <title>Angular cli 與 Node.js 版本對照</title>
      <link>https://calvinegs.github.io/posts/ngcli-nodejs-verion/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/ngcli-nodejs-verion/</guid>
      <description>Angular &amp;amp; cli 與 Node.js &amp;amp; TypeScript 版本對照表</description>
    </item>
    
  </channel>
</rss>
