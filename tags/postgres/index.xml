<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>postgres on 永誌不忘 • 筆記簿</title>
    <link>https://calvinegs.github.io/tags/postgres/</link>
    <description>Recent content in postgres on 永誌不忘 • 筆記簿</description>
    <image>
      <url>https://calvinegs.github.io/papermod-cover.png</url>
      <link>https://calvinegs.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://calvinegs.github.io/tags/postgres/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Node.js &#43; express &#43; postgres 建立一個後端服務 REST API</title>
      <link>https://calvinegs.github.io/posts/nodejs-restapi-postgres/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/nodejs-restapi-postgres/</guid>
      <description>Node.js &#43; express 來建立 REST API 服務，同時為提高網路安全性採取了 JWT JSON Web Token）來實作使用者驗證機制。資料庫的部份是使用 PostgresSQL，為方便起見，採用 Docker 來執行 PostgresSQL。</description>
    </item>
    
    <item>
      <title>使用 .NET 6.0 進行 JWT 身份驗證的 ASP.NET Web Api。並使用 Microsoft Identity 框架來存儲使用者和角色等資料（使用 PostgresSQL）</title>
      <link>https://calvinegs.github.io/posts/dotnet6-webapi-jwt-postgres/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/dotnet6-webapi-jwt-postgres/</guid>
      <description>採用 PostgresSQL 為後端資料庫，使用 .NET 6.0 進行 JWT 身份驗證的 ASP.NET Web Api。並使用 Microsoft Identity 框架來存儲使用者和角色等資料</description>
    </item>
    
    <item>
      <title>使用 Docker 執行 PostgresSQL 與 pgAdmin</title>
      <link>https://calvinegs.github.io/posts/docker-postgres-pgadmin/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://calvinegs.github.io/posts/docker-postgres-pgadmin/</guid>
      <description>在開發的環境中我們常會需要搭配資料庫，而常見的資料庫管理系統種類、版本繁多，如果搭直接安裝在 local 端作業系統中，可能會造成開發環境混亂，其中採 Docker 方式來安裝測試用資料庫的方式是一個不錯的解決方案</description>
    </item>
    
  </channel>
</rss>
